name: tfg-hiking-trails-app

services:

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - '5672:5672' # RabbitMQ port
      - '15672:15672' # Management UI
    env_file:
      - ./config/hiking-trail-service.env
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    container_name: api-gateway
    build:
      context: ./../api-gateway
      dockerfile: HikingTrails.ApiGateway/Dockerfile
    restart: always
    env_file:
      - ./config/auth-service.env
    ports:
      - '5000:8080'
    depends_on:
      - auth-service
      - hiking-trail-service
      - fit-data-service

  auth-service:
    container_name: auth-service
    build:
      context: ./..
      dockerfile: auth-service/AuthService.API/Dockerfile
    restart: always
    env_file:
      - ./config/auth-service.env
    expose:
      - '8080' # The microservice is no longer exposed externally so that it can only be accessed internally through my API Gateway.
    depends_on:
      - db-auth-service

  db-auth-service:
    container_name: db-auth-service
    image: mariadb:12.0.1-ubi9-rc
    restart: always
    env_file:
      - ./config/auth-service.env
    ports:
      - '3306:3306'
    volumes:
      # This volume is used to persist the database data
      - db-auth-service:/var/lib/mysql
      # Script to initialize the database
      - ./scripts/auth-service:/docker-entrypoint-initdb.d:ro

  hiking-trail-service:
    container_name: hiking-trail-service
    build:
      context: ./..
      dockerfile: hiking-trail-service/HikingTrailService.API/Dockerfile
    restart: always
    env_file:
      - ./config/hiking-trail-service.env
    expose:
      - '8080'
    volumes:
      - fit-files:/shared/data
    depends_on:
      - db-hiking-trail-service
      - rabbitmq

  db-hiking-trail-service:
    container_name: db-hiking-trail-service
    image: mariadb:12.0.1-ubi9-rc
    restart: always
    env_file:
      - ./config/hiking-trail-service.env
    ports:
      - '3307:3306'
    volumes:
      # This volume is used to persist the database data
      - db-hiking-trail-service:/var/lib/mysql
      # Script to initialize the database
      - ./scripts/hiking-trail-service:/docker-entrypoint-initdb.d:ro

  fit-data-service:
    container_name: fit-data-service
    build:
      context: ./..
      dockerfile: fit-data-service/FitDataService.API/Dockerfile
    restart: always
    env_file:
      - ./config/hiking-trail-service.env
    expose:
      - '8080'
    volumes:
      - fit-files:/shared/data
    depends_on:
      db-fit-data-service:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  db-fit-data-service:
    container_name: db-fit-data-service
    image: mongo:7.0.22
    restart: always
    env_file:
      - ./config/hiking-trail-service.env
    ports:
      - '27017:27017'
    volumes:
      # This volume is used to persist the database data
      - db-fit-data-service:/data/db
      # Script to initialize the database
      - ./scripts/fit-data-service:/docker-entrypoint-initdb.d:ro

volumes:
  db-auth-service:
  db-hiking-trail-service:
  db-fit-data-service:
  fit-files: